name: 金工珠寶監控-Selenium版

on:
  schedule:
    # 每小時執行一次
    - cron: '0 * * * *'
  
  # 可以手動觸發
  workflow_dispatch:

jobs:
  selenium-monitor:
    runs-on: ubuntu-latest
    
    steps:
    - name: 檢出程式碼
      uses: actions/checkout@v4
    
    - name: 設置 Python 環境
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: 安裝瀏覽器和驅動程式
      run: |
        echo "🔧 安裝 Chrome 和 ChromeDriver..."
        
        # 更新套件庫
        sudo apt-get update
        
        # 安裝 Chrome
        sudo apt-get install -y wget gnupg
        wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
        sudo sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google-chrome.list'
        sudo apt-get update
        sudo apt-get install -y google-chrome-stable
        
        # 檢查 Chrome 版本
        CHROME_VERSION=$(google-chrome --version | grep -oE '[0-9]+' | head -1)
        echo "✅ Chrome 主版本: $CHROME_VERSION"
        
        # 使用固定版本的 ChromeDriver (更穩定)
        echo "📥 下載 ChromeDriver..."
        
        # 嘗試下載最新穩定版本
        if [ "$CHROME_VERSION" -ge "120" ]; then
          CHROMEDRIVER_VERSION="120.0.6099.109"
        elif [ "$CHROME_VERSION" -ge "115" ]; then
          CHROMEDRIVER_VERSION="115.0.5790.170"
        else
          CHROMEDRIVER_VERSION="114.0.5735.90"
        fi
        
        echo "🎯 使用 ChromeDriver 版本: $CHROMEDRIVER_VERSION"
        
        # 下載 ChromeDriver
        wget -O chromedriver.zip "https://chromedriver.storage.googleapis.com/$CHROMEDRIVER_VERSION/chromedriver_linux64.zip"
        
        # 解壓縮並安裝
        unzip chromedriver.zip
        sudo mv chromedriver /usr/local/bin/chromedriver
        sudo chmod +x /usr/local/bin/chromedriver
        
        # 驗證安裝
        echo "✅ 安裝完成，驗證版本:"
        google-chrome --version
        chromedriver --version
    
    - name: 安裝 Python 套件
      run: |
        echo "📦 安裝 Python 套件..."
        pip install --upgrade pip
        pip install selenium==4.15.2
        pip install webdriver-manager==4.0.1
        pip install requests==2.31.0
        echo "✅ Python 套件安裝完成"
    
    - name: 測試 Selenium 環境
      run: |
        echo "🧪 測試 Selenium 環境..."
        python -c "
from selenium import webdriver
from selenium.webdriver.chrome.options import Options
from selenium.webdriver.chrome.service import Service

try:
    options = Options()
    options.add_argument('--headless')
    options.add_argument('--no-sandbox')
    options.add_argument('--disable-dev-shm-usage')
    
    service = Service('/usr/local/bin/chromedriver')
    driver = webdriver.Chrome(service=service, options=options)
    
    print('✅ Selenium 環境測試成功')
    driver.quit()
except Exception as e:
    print(f'❌ Selenium 環境測試失敗: {e}')
    exit(1)
"
    
    - name: 執行 Selenium 監控
      run: |
        echo "🚀 開始執行 Selenium 監控..."
        cd src
        python selenium_monitor.py
      env:
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
    
    - name: 檢查生成的檔案
      if: always()
      run: |
        echo "=== 檢查監控結果 ==="
        ls -la
        if [ -d results ]; then
          echo "✅ results 目錄存在"
          ls -la results/
        else
          echo "⚠️ 沒有 results 目錄"
        fi
        
        if [ -f selenium_matches.txt ]; then
          echo "✅ 找到 selenium_matches.txt"
          echo "檔案大小: $(wc -l < selenium_matches.txt) 行"
          echo "檔案內容預覽:"
          head -10 selenium_matches.txt
        else
          echo "⚠️ 沒有找到 selenium_matches.txt"
        fi
    
    - name: 提交結果到儲存庫
      if: success()
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        # 添加結果檔案
        git add results/ || echo "沒有 results 資料夾"
        git add *.txt || echo "沒有 txt 檔案"
        git add *.json || echo "沒有 json 檔案"
        
        # 檢查是否有變更
        if git diff --staged --quiet; then
          echo "沒有新的監控結果需要提交"
        else
          git commit -m "🤖 Selenium 監控結果更新 - $(date '+%Y-%m-%d %H:%M:%S UTC')"
          git push
        fi