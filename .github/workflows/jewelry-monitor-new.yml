name: 金工珠寶監控-Selenium版

on:
  schedule:
    # 每小時執行一次
    - cron: '0 * * * *'
  
  # 可以手動觸發
  workflow_dispatch:

jobs:
  selenium-monitor:
    runs-on: ubuntu-latest
    
    steps:
    - name: 檢出程式碼
      uses: actions/checkout@v4
    
    - name: 設置 Python 環境
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: 安裝瀏覽器 (使用系統套件)
      run: |
        echo "🔧 使用系統套件安裝 Chrome 和 ChromeDriver..."
        
        # 更新套件庫
        sudo apt-get update
        
        # 安裝 Chromium 和 ChromeDriver (更穩定)
        sudo apt-get install -y \
          chromium-browser \
          chromium-chromedriver \
          xvfb
        
        # 檢查安裝結果
        echo "✅ 安裝完成，檢查版本:"
        chromium-browser --version || echo "Chromium 檢查失敗"
        chromedriver --version || echo "ChromeDriver 檢查失敗"
        
        # 檢查檔案位置
        echo "📁 檢查安裝位置:"
        which chromium-browser
        which chromedriver
        ls -la /usr/bin/chromium* || echo "找不到 chromium"
        ls -la /usr/bin/chromedriver* || echo "找不到 chromedriver"
    
    - name: 安裝 Python 套件
      run: |
        echo "📦 安裝 Python 套件..."
        pip install --upgrade pip
        pip install selenium==4.15.2
        pip install requests==2.31.0
        echo "✅ Python 套件安裝完成"
        
        # 檢查套件版本
        pip show selenium
    
    - name: 測試 Selenium 環境
      run: |
        echo "🧪 測試 Selenium 環境..."
        python3 -c "
import sys
print(f'Python 版本: {sys.version}')

try:
    from selenium import webdriver
    from selenium.webdriver.chrome.options import Options
    from selenium.webdriver.chrome.service import Service
    print('✅ Selenium 匯入成功')
    
    # 設定選項
    options = Options()
    options.add_argument('--headless')
    options.add_argument('--no-sandbox')
    options.add_argument('--disable-dev-shm-usage')
    options.binary_location = '/usr/bin/chromium-browser'
    
    # 創建服務
    service = Service('/usr/bin/chromedriver')
    
    # 創建 driver
    driver = webdriver.Chrome(service=service, options=options)
    print('✅ Chrome driver 創建成功')
    
    # 測試基本功能
    driver.get('data:text/html,<html><body><h1>Test OK</h1></body></html>')
    title = driver.title
    print(f'✅ 頁面測試成功，標題: {title}')
    
    driver.quit()
    print('✅ Selenium 環境測試完全成功')
    
except Exception as e:
    print(f'❌ Selenium 環境測試失敗: {e}')
    import traceback
    traceback.print_exc()
    exit(1)
"
    
    - name: 執行 Selenium 監控
      run: |
        echo "🚀 開始執行 Selenium 監控..."
        cd src
        python selenium_monitor.py
      env:
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        DISPLAY: :99
    
    - name: 檢查執行結果
      if: always()
      run: |
        echo "=== 檢查監控結果 ==="
        
        # 檢查當前目錄
        echo "📁 當前目錄內容:"
        ls -la
        
        # 檢查 results 目錄
        if [ -d results ]; then
          echo "✅ results 目錄存在"
          ls -la results/
        else
          echo "⚠️ 沒有 results 目錄"
        fi
        
        # 檢查匹配結果檔案
        if [ -f selenium_matches.txt ]; then
          echo "✅ 找到 selenium_matches.txt"
          echo "檔案大小: $(wc -l < selenium_matches.txt) 行"
          echo "--- 檔案內容預覽 ---"
          head -15 selenium_matches.txt
        else
          echo "⚠️ 沒有找到 selenium_matches.txt"
        fi
        
        # 檢查 JSON 結果
        if [ -f selenium_summary.json ]; then
          echo "✅ 找到 selenium_summary.json"
          cat selenium_summary.json
        else
          echo "⚠️ 沒有找到 selenium_summary.json"
        fi
    
    - name: 提交結果到儲存庫
      if: success()
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action Bot"
        
        # 添加所有結果檔案
        git add results/ 2>/dev/null || echo "沒有 results 資料夾"
        git add *.txt 2>/dev/null || echo "沒有 txt 檔案"
        git add *.json 2>/dev/null || echo "沒有 json 檔案"
        
        # 檢查是否有變更需要提交
        if git diff --staged --quiet; then
          echo "📝 沒有新的監控結果需要提交"
        else
          echo "📝 發現新的監控結果，準備提交..."
          git commit -m "🤖 Selenium 監控結果 - $(date '+%Y-%m-%d %H:%M:%S UTC')"
          git push
          echo "✅ 結果已提交到儲存庫"
        fi